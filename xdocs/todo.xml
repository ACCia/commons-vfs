<?xml version="1.0"?>

<document>
    <properties>
        <title>TODO</title>
        <author email="jstrachan@apache.org">James Strachan</author>
    </properties>

    <body>
        <section name="TODO">
            <p>
                The following is a list of items that need to be completed.
                Contributions are welcome!.
            </p>

            <ul>
                <li>More documentation (status, how to build, jar dependencies, etc)</li>
                <li>Add more providers: http, webdav, resources, tar, gzip, cvs, subversion, jndi, etc</li>
                <li>Formalise the provider API.</li>
                <li>
                    The in-memory caching mechanism is pretty rudimentary at
                    this stage. It needs work to make it size capped. In addition,
                    some mechanism needs to be provided to release and refresh
                    cached info.</li>
                <li>
                    The on-disk caching mechanism also needs more work.  Needs
                    to check last-modified time.  Replicator needs to be more
                    configurable.</li>
                <li>Add persistent replicator.</li>
                <li>Add local mirroring.</li>
                <li>
                    Change AbstractLayeredFileSystem to track changes to
                    the parent file object.  Eg when the parent file is deleted,
                    mark all the files in the fs as 'does-not-exist'.</li>
                <li>Change AbstractLayeredFileSystem to support writeable
                    layered fs.</li>
                <li>Make StandardFileSystemManager configurable from an XML descriptor.</li>
                <li>Change the model so that folders may have content.</li>
                <li>
                    Finish support for junctions:  Make ancestors of a junction
                    point visible, fire events when junction is added or removed,
                    tests.</li>
                <li>
                    Add support for federation (ie transparently crossing file
                    system boundaries, such as drilling down into the contents
                    of a Jar file).</li>
                <li>
                    Add Filtering file systems, which sit on top of another
                    file system, and alter the contents.  For example, gzip or bzip2.</li>
                <li>Add an equivalent of the fileScanner Jelly tag.</li>
                <li>Add an equivalent of Ant fileset.</li>
                <li>
                    Allow selectors, name mappers, and filters to be specified
                    for the Ant tasks.</li>
                <li>Capabilities discovery.</li>
                <li>Attributes and attribute schema.</li>
                <li>
                    Handle file canonicalisation better (for cases like
                    case-insensitive file systems, symbolic links, name mangling, etc).</li>
                <li>Add more selectors: XPath, Ant style, regular expression.</li>
                <li>Add adaptor for use with JXpath.</li>
                <li>Add contentChanged event to FileListener.</li>
                <li>Provide a hook for authentication.</li>
                <li>Sort out threading model.</li>
                <li>Add a file monitor, that watches for external changes to files.</li>
                <li>
                    Look at adding native code for fine-grained control over permissions,
                    file monitoring, faster moves, etc.  Must be optional - the
                    thing should still build and run without the native code.
                </li>
            </ul>
        </section>
    </body>
</document>

